void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
    // Normalized pixel coordinates (from 0 to 1)
    vec2 uv = fragCoord/iResolution.xy;
    uv.x = (800.0/450.0)*uv.x -0.35;
    
    vec2 center = vec2(0.5,0.5);
    vec2 v = uv - center;
    
    float dist = length(v);
    
    vec4 finalColor = vec4(0.0,0.0,0.0,1.0);
    
    vec2 v2 = v *2.0;
    
    float z = pow(1.0-v2.x * v2.x -v2.y * v2.y,0.5);
    vec3 normal = vec3(v2.x,v2.y,z);
    
    float alpha = acos(normal.y)/3.1416;
    float betha = 1.0 - atan(normal.z,normal.x)/(2.0*3.1416);
    
    float lighting = clamp(dot(normal,normalize(vec3(0.0,0.0,1.0))), 0.0,1.0);
    float edge = pow(1.0- clamp(dot(normal,normalize(vec3(0.0,0.0,1.0))), 0.0,1.0),1.0);
    
    vec3 camPos = vec3(0.0,0.0,3.0);
    vec3 camDir = normalize(camPos - normal);
    
    vec3 reflectVector = reflect(normal,camDir);
    
    vec4 t = texture(iChannel0,reflectVector);
    vec4 t2 = texture(iChannel1,reflectVector);
    
    //vec4 t3 = mix(t,t2,0.5);
    
    
    float sinB = sin(betha * 80.0) ;
    
    float roughness = 1.0;
    
    if(sinB < 0.0)
        roughness = 0.0;
        
    vec4 t3 = mix(t,t2,roughness);
    
    if(dist <= 0.5)
        finalColor = t3*lighting;//+edge *vec4(1.0,0.2,0.2,0.0);
    

    // Time varying pixel color
    
    
    vec4 color = vec4(1.0,1.0,1.0,1.0);

    // Output to screen
    fragColor = finalColor;
}